[*] Start mutation process:
   - targets: /Users/riteeshram/Documents/Code Base/aster/llm_testgen/tests/source/sample_number.py
   - tests: /Users/riteeshram/Documents/Code Base/aster/llm_testgen/tests/test_suites/llm_generated_test_sample_number.py
[*] 0 tests passed:
   - llm_generated_test_sample_number [0.00002 s]
[*] Start mutants generation and execution:
   - [#   1] AOD sample_number: 
--------------------------------------------------------------------------------
  44:     print(f'Sum of positive numbers: {total}')
  45: 
  46: 
  47: if __name__ == '__main__':
- 48:     sample = [0, 1, -3, 4, 7, 2, 9]
+ 48:     sample = [0, 1, 3, 4, 7, 2, 9]
  49:     classify_numbers(sample)
--------------------------------------------------------------------------------
[0.53075 s] survived
   - [#   2] AOR sample_number: 
--------------------------------------------------------------------------------
  44:     print(f'Sum of positive numbers: {total}')
  45: 
  46: 
  47: if __name__ == '__main__':
- 48:     sample = [0, 1, -3, 4, 7, 2, 9]
+ 48:     sample = [0, 1, +3, 4, 7, 2, 9]
  49:     classify_numbers(sample)
--------------------------------------------------------------------------------
[0.45855 s] survived
   - [#   3] ASR sample_number: 
--------------------------------------------------------------------------------
  23:         
  24:         if n == 0:
  25:             print('Zero encountered – adding nothing.')
  26:         else:
- 27:             total += n
+ 27:             total -= n
  28:         
  29:         
  30:         n\
  31:             0\
--------------------------------------------------------------------------------
[0.46556 s] survived
   - [#   4] BCR sample_number: 
--------------------------------------------------------------------------------
  17:     for n in nums:
  18:         
  19:         if n < 0:
  20:             print(f'Skipping negative value {n}')
- 21:             continue
+ 21:             break
  22:         
  23:         
  24:         if n == 0:
  25:             print('Zero encountered – adding nothing.')
--------------------------------------------------------------------------------
[0.44891 s] survived
   - [#   5] COD sample_number: 
--------------------------------------------------------------------------------
   6:     print an action chosen via a match-case 'switch' statement.
   7:     """
   8:     
   9:     
- 10:     if not nums:
+ 10:     if nums:
  11:         print('Empty list provided.')
  12:         return
  13:     
  14:     total = 0
--------------------------------------------------------------------------------
[0.44678 s] survived
   - [#   6] COI sample_number: 
--------------------------------------------------------------------------------
   6:     print an action chosen via a match-case 'switch' statement.
   7:     """
   8:     
   9:     
- 10:     if not nums:
+ 10:     if not ((not nums)):
  11:         print('Empty list provided.')
  12:         return
  13:     
  14:     total = 0
--------------------------------------------------------------------------------
[0.45394 s] survived
   - [#   7] COI sample_number: 
--------------------------------------------------------------------------------
  15:     
  16:     
  17:     for n in nums:
  18:         
- 19:         if n < 0:
+ 19:         if not (n < 0):
  20:             print(f'Skipping negative value {n}')
  21:             continue
  22:         
  23:         
--------------------------------------------------------------------------------
[0.45380 s] survived
   - [#   8] COI sample_number: 
--------------------------------------------------------------------------------
  20:             print(f'Skipping negative value {n}')
  21:             continue
  22:         
  23:         
- 24:         if n == 0:
+ 24:         if not (n == 0):
  25:             print('Zero encountered – adding nothing.')
  26:         else:
  27:             total += n
  28:         
--------------------------------------------------------------------------------
[0.45139 s] survived
   - [#   9] COI sample_number: 
--------------------------------------------------------------------------------
  43:     
  44:     print(f'Sum of positive numbers: {total}')
  45: 
  46: 
- 47: if __name__ == '__main__':
+ 47: if not (__name__ == '__main__'):
  48:     sample = [0, 1, -3, 4, 7, 2, 9]
  49:     classify_numbers(sample)
--------------------------------------------------------------------------------
Zero encountered – adding nothing.
Value 0: do nothing
Value 1: light work
Skipping negative value -3
Value 4: moderate work
Value 7: heavy lifting
Value 2: light work
Value 9: heavy lifting
Sum of positive numbers: 23
[0.44634 s] survived
   - [#  10] ROR sample_number: 
--------------------------------------------------------------------------------
  15:     
  16:     
  17:     for n in nums:
  18:         
- 19:         if n < 0:
+ 19:         if n > 0:
  20:             print(f'Skipping negative value {n}')
  21:             continue
  22:         
  23:         
--------------------------------------------------------------------------------
[0.44868 s] survived
   - [#  11] ROR sample_number: 
--------------------------------------------------------------------------------
  15:     
  16:     
  17:     for n in nums:
  18:         
- 19:         if n < 0:
+ 19:         if n <= 0:
  20:             print(f'Skipping negative value {n}')
  21:             continue
  22:         
  23:         
--------------------------------------------------------------------------------
[0.44848 s] survived
   - [#  12] ROR sample_number: 
--------------------------------------------------------------------------------
  20:             print(f'Skipping negative value {n}')
  21:             continue
  22:         
  23:         
- 24:         if n == 0:
+ 24:         if n != 0:
  25:             print('Zero encountered – adding nothing.')
  26:         else:
  27:             total += n
  28:         
--------------------------------------------------------------------------------
[0.44819 s] survived
   - [#  13] ROR sample_number: 
--------------------------------------------------------------------------------
  33:             123\
  34:             action = 'light work'\
  35:             456\
  36:             action = 'moderate work'\
- 37:             n > 6\
+ 37:             n < 6\
  38:             action = 'heavy lifting'\
  39:             \
  40:             action = 'undefined'
  41:         print(f'Value {n}: {action}')
--------------------------------------------------------------------------------
[0.44773 s] survived
   - [#  14] ROR sample_number: 
--------------------------------------------------------------------------------
  33:             123\
  34:             action = 'light work'\
  35:             456\
  36:             action = 'moderate work'\
- 37:             n > 6\
+ 37:             n >= 6\
  38:             action = 'heavy lifting'\
  39:             \
  40:             action = 'undefined'
  41:         print(f'Value {n}: {action}')
--------------------------------------------------------------------------------
[0.46621 s] survived
   - [#  15] ROR sample_number: 
--------------------------------------------------------------------------------
  43:     
  44:     print(f'Sum of positive numbers: {total}')
  45: 
  46: 
- 47: if __name__ == '__main__':
+ 47: if __name__ != '__main__':
  48:     sample = [0, 1, -3, 4, 7, 2, 9]
  49:     classify_numbers(sample)
--------------------------------------------------------------------------------
Zero encountered – adding nothing.
Value 0: do nothing
Value 1: light work
Skipping negative value -3
Value 4: moderate work
Value 7: heavy lifting
Value 2: light work
Value 9: heavy lifting
Sum of positive numbers: 23
[0.45825 s] survived
[*] Mutation score [7.05686 s]: 0.0%
   - all: 15
   - killed: 0 (0.0%)
   - survived: 15 (100.0%)
   - incompetent: 0 (0.0%)
   - timeout: 0 (0.0%)
