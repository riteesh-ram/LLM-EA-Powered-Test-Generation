# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sample_calculator_stats as module_0


def test_case_0():
    none_type_0 = None
    module_0.calculator(none_type_0, none_type_0, none_type_0)


def test_case_1():
    none_type_0 = None
    module_0.statistics_calculator(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "variance"
    none_type_0 = None
    module_0.statistics_calculator(none_type_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    str_0 = "exp"
    module_0.calculator(none_type_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "add"
    bool_0 = False
    module_0.calculator(bool_0, str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "d6d"
    str_1 = "sub"
    module_0.calculator(str_0, str_1)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "floordiv"
    str_1 = "tf"
    none_type_0 = None
    module_0.statistics_calculator(none_type_0, str_1)
    module_0.calculator(str_0, str_1)
    module_0.calculator(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "\\-?`IvnV$e\n\t;Oc]\x0b$O1`\x0b"
    str_1 = "mean"
    module_0.calculator(str_0, str_1)
    module_0.statistics_calculator(str_0, str_1)


@pytest.mark.xfail(strict=True)
def test_case_8():
    int_0 = 11674
    module_0.calculator(int_0, int_0)
    str_0 = "div"
    module_0.calculator(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = "std_dev"
    int_0 = -8981
    var_0 = module_0.calculator(str_0, int_0)
    module_0.statistics_calculator(var_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = "sqrt"
    module_0.calculator(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = "mod"
    module_0.calculator(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = "median"
    module_0.statistics_calculator(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = "mul"
    module_0.calculator(str_0, str_0)
