# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import sample_number as module_0


def test_case_0():
    bytes_0 = b"\xc3k_\xad+\xeeC\xe4\n\xff\xc2\xef\x07\x97"
    module_0.classify_numbers(bytes_0)


def test_case_1():
    bytes_0 = b"\xc3k_\xad+\xeeC\xe4\n\xff\xc2\xef\x07\x97"
    var_0 = module_0.classify_numbers(bytes_0)
    module_0.classify_numbers(var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -6983
    str_0 = "l'Gy\"Qb.QbF\t=NM\x0c\n"
    int_1 = 3
    list_0 = [int_0, str_0, int_1]
    module_0.classify_numbers(list_0)


def test_case_3():
    int_0 = 3
    list_0 = [int_0]
    module_0.classify_numbers(list_0)


def test_case_4():
    none_type_0 = None
    bool_0 = False
    list_0 = [bool_0]
    module_0.classify_numbers(list_0)
    bytes_0 = b"\x9aN\x08\xa0A.\xdc\x93\xadhM\xd4\x02"
    module_0.classify_numbers(bytes_0)
    module_0.classify_numbers(none_type_0)
    bytes_1 = b"\x92\x13\x06G\x9f\x0et\xf0I\x1emX"
    module_0.classify_numbers(bytes_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 3626
    list_0 = [int_0, int_0]
    var_0 = module_0.classify_numbers(list_0)
    bool_0 = True
    bool_1 = False
    list_1 = [bool_0, bool_1, var_0]
    module_0.classify_numbers(list_1)


def test_case_6():
    bytes_0 = b"|J\xf3\xafN\x98\x8a\x08\x19Bq\x06L+"
    module_0.classify_numbers(bytes_0)


def test_case_7():
    bytes_0 = b'\x03{\xa4\x16\x0e\x1a\x0e\x98>\x02\x8d\x90"m\x04\xc9\xfb'
    module_0.classify_numbers(bytes_0)


def test_case_8():
    bytes_0 = b"\x16\x1d\xc5\x05\xf6bj\xa8\xd4\x03\xf3"
    module_0.classify_numbers(bytes_0)
    none_type_0 = None
    module_0.classify_numbers(none_type_0)
