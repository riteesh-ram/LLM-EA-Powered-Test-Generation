# Auto-generated seed tests (normalised) - DO NOT EDIT MANUALLY
# Generated by evolutionary_algo_integration.normalizer
import sys
from pathlib import Path

# Add source directory to Python path
current_dir = Path(__file__).parent
source_dir = current_dir.parent / "source"
sys.path.insert(0, str(source_dir))

import sample_paran_groups as _mod

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_0 -> separate_paren_groups
def test_seed_0():
    arg_0 = '()'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_1 -> separate_paren_groups
def test_seed_1():
    arg_0 = '(())'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_2 -> separate_paren_groups
def test_seed_2():
    arg_0 = '()()'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_3 -> separate_paren_groups
def test_seed_3():
    arg_0 = '((()))'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_4 -> separate_paren_groups
def test_seed_4():
    arg_0 = '() (())'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_5 -> separate_paren_groups
def test_seed_5():
    arg_0 = ' ( ( ) ) '
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_6 -> separate_paren_groups
def test_seed_6():
    arg_0 = '(( )( ))'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_7 -> separate_paren_groups
def test_seed_7():
    arg_0 = '( ) (( )) (( )( ))'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_8 -> separate_paren_groups
def test_seed_8():
    arg_0 = '((())) () (())'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_9 -> separate_paren_groups
def test_seed_9():
    arg_0 = '((()))()(())'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_10 -> separate_paren_groups
def test_seed_10():
    arg_0 = '((()))  ()   (())'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_11 -> separate_paren_groups
def test_seed_11():
    arg_0 = '((()))\t()\n(())'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_12 -> separate_paren_groups
def test_seed_12():
    arg_0 = 'a(b)c(d(e)f)g'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_valid_parenthesis_strings_param_13 -> separate_paren_groups
def test_seed_13():
    arg_0 = '((a)b(c))'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_0 -> separate_paren_groups
def test_seed_14():
    arg_0 = ''
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_1 -> separate_paren_groups
def test_seed_15():
    arg_0 = '   '
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_2 -> separate_paren_groups
def test_seed_16():
    arg_0 = 'abc def'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_3 -> separate_paren_groups
def test_seed_17():
    arg_0 = '((('
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_4 -> separate_paren_groups
def test_seed_18():
    arg_0 = ')))'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_5 -> separate_paren_groups
def test_seed_19():
    arg_0 = '(())('
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_6 -> separate_paren_groups
def test_seed_20():
    arg_0 = ')()('
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_7 -> separate_paren_groups
def test_seed_21():
    arg_0 = '())(()'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_8 -> separate_paren_groups
def test_seed_22():
    arg_0 = '(()))'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_9 -> separate_paren_groups
def test_seed_23():
    arg_0 = '(('
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_10 -> separate_paren_groups
def test_seed_24():
    arg_0 = '))'
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_11 -> separate_paren_groups
def test_seed_25():
    arg_0 = '()('
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_edge_cases_and_malformed_inputs_param_12 -> separate_paren_groups
def test_seed_26():
    arg_0 = ')('
    _mod.separate_paren_groups(arg_0)

# From: TestSeparateParenGroups_test_large_input_performance -> separate_paren_groups
def test_seed_27():
    arg_0 = '((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))((()))'
    _mod.separate_paren_groups(arg_0)

# Generated 28 seed test cases from source tests
# - separate_paren_groups: 28 test cases
